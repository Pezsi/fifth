<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anim√°lt K√°rty√°k √ösz√≥ Effekttel √©s Interakci√≥val</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
        }
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background: linear-gradient(0deg, #ff0080, #ff8c00, #ff0080, #ff8c00);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
        }

        .header {
            width: 100%;
            background-color: rgba(0, 0, 0, 0.5); /* √Åtl√°tsz√≥ fekete h√°tt√©r */
            padding: 15px 0;
            text-align: center;
            position: fixed; /* R√∂gz√≠tett a lap tetej√©n */
            top: 0;
            left: 0;
            z-index: 10;
            padding: 20px 0;

        }

        .header nav a {
            color: white;
            text-decoration: none;
            margin: 0 15px;
            font-size: 20px;
            transition: color 0.3s;
        }

        .header-btn {
            background-color: transparent;
            border: 2px solid white;
            border-radius: 20px;
            padding: 10px 15px;
            color: white;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 0 10px;
        }

        .header-btn:hover {
            background-color: white;
            color: black;
            transform: scale(1.1);
        }


        .header nav a:hover {
            color: #ff8c00; /* Sz√≠nv√°ltoz√°s hoverkor */
        }

        .card-container {
            display: flex;
            gap: 20px;
            z-index: 1;
            margin-bottom: 50px;
            margin-top: 70px; 
        }
        .card {
            width: 200px;
            height: 300px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            background-color: black;
            color: white;
            transition: background-color 2s ease, transform 0.3s ease, opacity 0.5s ease, transform 0.5s ease;
            opacity: 0; /* Kezdetben √°tl√°tsz√≥ */
            transform: scale(0.5); /* Kisebb m√©ret */
            position: relative;
            transition: transform 1s, background-color 2s ease, opacity 0.5s ease;
            transform: rotateY(0deg) scale(0.5); /* Kezdeti √°llapot */
            cursor: pointer; /* Mutatja, hogy kattinthat√≥ */
        }


        /* k√°rtya megford√≠t√°s funkci√≥ elkezd√©se */ 
        .card-back {
        background-color: #add8e6; /* L√°gy k√©k sz√≠n */
        position: absolute;
        width: 100%;
        height: 100%;
        border-radius: 10px;
        backface-visibility: hidden; /* Elrejti a h√°toldalt, amikor a k√°rtya megfordul */
        transform: rotateY(180deg); /* Kezdetben megford√≠tva */

        }

        .card.animate {
            opacity: 1; /* L√°that√≥v√° v√°lik */
            transform: rotateY(0deg) scale(1); /* Norm√°l m√©retre n≈ë */

        }
        .card:hover {
            background-color: #333; /* Enyhe sz√ºrke sz√≠nre v√°ltoz√°s */
            transform: scale(1.05); /* Kis m√©retn√∂veked√©s √©s lebeg√©s */
        }
        .card.hovered {
            transform: rotateY(0deg) scale(1.05);
        }

        
        .card.flipped {
            transform: rotateY(180deg) scale(1); /* Megford√≠tja a k√°rty√°t */

        }

        .card-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 18px;
            text-align: center;
            opacity: 0;
            transition: opacity 0.5s ease;
        }

        .card.show-text .card-text {
            opacity: 0.8;
        }


        .plus-button {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: 2px solid black;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            color: black;
            cursor: pointer;
            background-color: transparent;
            transition: transform 0.3s ease;
            outline: none;
        }
        .plus-button:hover {
            transform: scale(1.1);
        }



        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
    </style>
</head>
<body>
    <div class="header">
        <nav>
            <button class="header-btn">üòÄ</button>
            <button class="header-btn">üöÄ</button>
            <button class="header-btn">üéâ</button>
        </nav>
    </div>
    
    
    <div class="card-container" id="cardContainer">
        <div class="card animate" id="card1">
            <div class="card-back"></div>
            <div class="card-text"></div>
        </div>
        <div class="card animate" id="card2">
            <div class="card-back"></div>
            <div class="card-text"></div>
        </div>
        <div class="card animate" id="card3">
            <div class="card-back"></div>
            <div class="card-text"></div>
        </div>
    </div>
    <button class="plus-button" onclick="addCard()">+</button>

    <script>
        function addCard() {
            const cardContainer = document.getElementById('cardContainer');
            const newCard = document.createElement('div');
            newCard.classList.add('card');
            const newCardBack = document.createElement('div');
            newCardBack.classList.add('card-back');
            newCard.appendChild(newCardBack);
            cardContainer.appendChild(newCard);
            
            // K√©sleltet√©s az anim√°ci√≥hoz
            setTimeout(() => {
                newCard.classList.add('animate');
            }, 100);

            // Sz√≠nv√°ltoz√°s, lebeg√©s √©s megfordul√°s hozz√°ad√°sa az √∫j k√°rty√°hoz
            newCard.addEventListener('mouseenter', () => {
                changeColor(newCard);
                newCard.style.transform = 'scale(1.05)';
            });
            newCard.addEventListener('mouseleave', () => {
                newCard.style.backgroundColor = 'black';
                newCard.style.transform = 'scale(1)';
            });
            newCard.addEventListener('click', flipCard);
        }

    
        function changeColor(card) {
            const hue = Math.random() * 360;
            const pastelColor = `hsl(${hue}, 100%, 85%)`;
            card.style.backgroundColor = pastelColor;
        }
    
        // Sz√≠nv√°ltoz√°s, lebeg√©s √©s megfordul√°s hozz√°ad√°sa a megl√©v≈ë k√°rty√°khoz
        document.querySelectorAll('.card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                changeColor(card);
                card.style.transform = 'scale(1.05)';
            });
            card.addEventListener('mouseleave', () => {
                card.style.backgroundColor = 'black';
                card.style.transform = 'scale(1)';
            });
            card.addEventListener('click', flipCard);
        });
    
    
        function flipCard(event) {
            const card = event.currentTarget;
            let cardText = card.querySelector('.card-text');
            if (!cardText) {
                cardText = document.createElement('div');
                cardText.classList.add('card-text');
                card.appendChild(cardText);
            }
            cardText.textContent = getRandomText(); // Egy v√©letlenszer≈± sz√∂veg
            card.classList.toggle('show-text');
        }

        function getRandomText() {
            const texts = [
                "Sz√∂veg 1", "Sz√∂veg 2", "Sz√∂veg 3",
                "Kaland", "Felfedez√©s", "Innov√°ci√≥",
                "Titok", "Rejt√©ly", "Izgalom",
                // Tov√°bbi sz√∂vegek...
            ];
            return texts[Math.floor(Math.random() * texts.length)];
        }


        /* teljesen random sz√∂veg */ 

        /*
        function getRandomText() {
            const length = Math.floor(Math.random() * 10) + 5; // V√©letlenszer≈± sz√∂veghossz 5 √©s 15 karakter k√∂z√∂tt
            let randomText = '';
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

            for (let i = 0; i < length; i++) {
                randomText += characters.charAt(Math.floor(Math.random() * characters.length));
            }

            return randomText;
        }

        */
    </script>
    
</body>
</html>
